/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LdapConfigForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LdapConfigForm{}

// LdapConfigForm struct for LdapConfigForm
type LdapConfigForm struct {
	EnableLdap NullableBool `json:"enable_ldap,omitempty"`
}

// NewLdapConfigForm instantiates a new LdapConfigForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapConfigForm() *LdapConfigForm {
	this := LdapConfigForm{}
	return &this
}

// NewLdapConfigFormWithDefaults instantiates a new LdapConfigForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapConfigFormWithDefaults() *LdapConfigForm {
	this := LdapConfigForm{}
	return &this
}

// GetEnableLdap returns the EnableLdap field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LdapConfigForm) GetEnableLdap() bool {
	if o == nil || IsNil(o.EnableLdap.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableLdap.Get()
}

// GetEnableLdapOk returns a tuple with the EnableLdap field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LdapConfigForm) GetEnableLdapOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableLdap.Get(), o.EnableLdap.IsSet()
}

// HasEnableLdap returns a boolean if a field has been set.
func (o *LdapConfigForm) HasEnableLdap() bool {
	if o != nil && o.EnableLdap.IsSet() {
		return true
	}

	return false
}

// SetEnableLdap gets a reference to the given NullableBool and assigns it to the EnableLdap field.
func (o *LdapConfigForm) SetEnableLdap(v bool) {
	o.EnableLdap.Set(&v)
}
// SetEnableLdapNil sets the value for EnableLdap to be an explicit nil
func (o *LdapConfigForm) SetEnableLdapNil() {
	o.EnableLdap.Set(nil)
}

// UnsetEnableLdap ensures that no value is present for EnableLdap, not even an explicit nil
func (o *LdapConfigForm) UnsetEnableLdap() {
	o.EnableLdap.Unset()
}

func (o LdapConfigForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LdapConfigForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.EnableLdap.IsSet() {
		toSerialize["enable_ldap"] = o.EnableLdap.Get()
	}
	return toSerialize, nil
}

type NullableLdapConfigForm struct {
	value *LdapConfigForm
	isSet bool
}

func (v NullableLdapConfigForm) Get() *LdapConfigForm {
	return v.value
}

func (v *NullableLdapConfigForm) Set(val *LdapConfigForm) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapConfigForm) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapConfigForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapConfigForm(val *LdapConfigForm) *NullableLdapConfigForm {
	return &NullableLdapConfigForm{value: val, isSet: true}
}

func (v NullableLdapConfigForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapConfigForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


