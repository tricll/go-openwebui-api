/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openwebuiapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChatTitleMessagesForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatTitleMessagesForm{}

// ChatTitleMessagesForm struct for ChatTitleMessagesForm
type ChatTitleMessagesForm struct {
	Title string `json:"title"`
	Messages []map[string]interface{} `json:"messages"`
}

type _ChatTitleMessagesForm ChatTitleMessagesForm

// NewChatTitleMessagesForm instantiates a new ChatTitleMessagesForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatTitleMessagesForm(title string, messages []map[string]interface{}) *ChatTitleMessagesForm {
	this := ChatTitleMessagesForm{}
	this.Title = title
	this.Messages = messages
	return &this
}

// NewChatTitleMessagesFormWithDefaults instantiates a new ChatTitleMessagesForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatTitleMessagesFormWithDefaults() *ChatTitleMessagesForm {
	this := ChatTitleMessagesForm{}
	return &this
}

// GetTitle returns the Title field value
func (o *ChatTitleMessagesForm) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ChatTitleMessagesForm) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ChatTitleMessagesForm) SetTitle(v string) {
	o.Title = v
}

// GetMessages returns the Messages field value
func (o *ChatTitleMessagesForm) GetMessages() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *ChatTitleMessagesForm) GetMessagesOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *ChatTitleMessagesForm) SetMessages(v []map[string]interface{}) {
	o.Messages = v
}

func (o ChatTitleMessagesForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatTitleMessagesForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	toSerialize["messages"] = o.Messages
	return toSerialize, nil
}

func (o *ChatTitleMessagesForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"messages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChatTitleMessagesForm := _ChatTitleMessagesForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChatTitleMessagesForm)

	if err != nil {
		return err
	}

	*o = ChatTitleMessagesForm(varChatTitleMessagesForm)

	return err
}

type NullableChatTitleMessagesForm struct {
	value *ChatTitleMessagesForm
	isSet bool
}

func (v NullableChatTitleMessagesForm) Get() *ChatTitleMessagesForm {
	return v.value
}

func (v *NullableChatTitleMessagesForm) Set(val *ChatTitleMessagesForm) {
	v.value = val
	v.isSet = true
}

func (v NullableChatTitleMessagesForm) IsSet() bool {
	return v.isSet
}

func (v *NullableChatTitleMessagesForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatTitleMessagesForm(val *ChatTitleMessagesForm) *NullableChatTitleMessagesForm {
	return &NullableChatTitleMessagesForm{value: val, isSet: true}
}

func (v NullableChatTitleMessagesForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatTitleMessagesForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


