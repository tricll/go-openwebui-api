/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openwebuiapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WorkspacePermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspacePermissions{}

// WorkspacePermissions struct for WorkspacePermissions
type WorkspacePermissions struct {
	Models bool `json:"models"`
	Knowledge bool `json:"knowledge"`
	Prompts bool `json:"prompts"`
	Tools bool `json:"tools"`
}

type _WorkspacePermissions WorkspacePermissions

// NewWorkspacePermissions instantiates a new WorkspacePermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspacePermissions(models bool, knowledge bool, prompts bool, tools bool) *WorkspacePermissions {
	this := WorkspacePermissions{}
	this.Models = models
	this.Knowledge = knowledge
	this.Prompts = prompts
	this.Tools = tools
	return &this
}

// NewWorkspacePermissionsWithDefaults instantiates a new WorkspacePermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspacePermissionsWithDefaults() *WorkspacePermissions {
	this := WorkspacePermissions{}
	return &this
}

// GetModels returns the Models field value
func (o *WorkspacePermissions) GetModels() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Models
}

// GetModelsOk returns a tuple with the Models field value
// and a boolean to check if the value has been set.
func (o *WorkspacePermissions) GetModelsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Models, true
}

// SetModels sets field value
func (o *WorkspacePermissions) SetModels(v bool) {
	o.Models = v
}

// GetKnowledge returns the Knowledge field value
func (o *WorkspacePermissions) GetKnowledge() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Knowledge
}

// GetKnowledgeOk returns a tuple with the Knowledge field value
// and a boolean to check if the value has been set.
func (o *WorkspacePermissions) GetKnowledgeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Knowledge, true
}

// SetKnowledge sets field value
func (o *WorkspacePermissions) SetKnowledge(v bool) {
	o.Knowledge = v
}

// GetPrompts returns the Prompts field value
func (o *WorkspacePermissions) GetPrompts() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Prompts
}

// GetPromptsOk returns a tuple with the Prompts field value
// and a boolean to check if the value has been set.
func (o *WorkspacePermissions) GetPromptsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Prompts, true
}

// SetPrompts sets field value
func (o *WorkspacePermissions) SetPrompts(v bool) {
	o.Prompts = v
}

// GetTools returns the Tools field value
func (o *WorkspacePermissions) GetTools() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Tools
}

// GetToolsOk returns a tuple with the Tools field value
// and a boolean to check if the value has been set.
func (o *WorkspacePermissions) GetToolsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tools, true
}

// SetTools sets field value
func (o *WorkspacePermissions) SetTools(v bool) {
	o.Tools = v
}

func (o WorkspacePermissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspacePermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["models"] = o.Models
	toSerialize["knowledge"] = o.Knowledge
	toSerialize["prompts"] = o.Prompts
	toSerialize["tools"] = o.Tools
	return toSerialize, nil
}

func (o *WorkspacePermissions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"models",
		"knowledge",
		"prompts",
		"tools",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkspacePermissions := _WorkspacePermissions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkspacePermissions)

	if err != nil {
		return err
	}

	*o = WorkspacePermissions(varWorkspacePermissions)

	return err
}

type NullableWorkspacePermissions struct {
	value *WorkspacePermissions
	isSet bool
}

func (v NullableWorkspacePermissions) Get() *WorkspacePermissions {
	return v.value
}

func (v *NullableWorkspacePermissions) Set(val *WorkspacePermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspacePermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspacePermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspacePermissions(val *WorkspacePermissions) *NullableWorkspacePermissions {
	return &NullableWorkspacePermissions{value: val, isSet: true}
}

func (v NullableWorkspacePermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspacePermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


