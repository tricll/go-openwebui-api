/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SignupForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignupForm{}

// SignupForm struct for SignupForm
type SignupForm struct {
	Name string `json:"name"`
	Email string `json:"email"`
	Password string `json:"password"`
	ProfileImageUrl NullableString `json:"profile_image_url,omitempty"`
}

type _SignupForm SignupForm

// NewSignupForm instantiates a new SignupForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignupForm(name string, email string, password string) *SignupForm {
	this := SignupForm{}
	this.Name = name
	this.Email = email
	this.Password = password
	return &this
}

// NewSignupFormWithDefaults instantiates a new SignupForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignupFormWithDefaults() *SignupForm {
	this := SignupForm{}
	return &this
}

// GetName returns the Name field value
func (o *SignupForm) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SignupForm) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SignupForm) SetName(v string) {
	o.Name = v
}

// GetEmail returns the Email field value
func (o *SignupForm) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *SignupForm) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *SignupForm) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *SignupForm) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *SignupForm) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *SignupForm) SetPassword(v string) {
	o.Password = v
}

// GetProfileImageUrl returns the ProfileImageUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignupForm) GetProfileImageUrl() string {
	if o == nil || IsNil(o.ProfileImageUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ProfileImageUrl.Get()
}

// GetProfileImageUrlOk returns a tuple with the ProfileImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignupForm) GetProfileImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProfileImageUrl.Get(), o.ProfileImageUrl.IsSet()
}

// HasProfileImageUrl returns a boolean if a field has been set.
func (o *SignupForm) HasProfileImageUrl() bool {
	if o != nil && o.ProfileImageUrl.IsSet() {
		return true
	}

	return false
}

// SetProfileImageUrl gets a reference to the given NullableString and assigns it to the ProfileImageUrl field.
func (o *SignupForm) SetProfileImageUrl(v string) {
	o.ProfileImageUrl.Set(&v)
}
// SetProfileImageUrlNil sets the value for ProfileImageUrl to be an explicit nil
func (o *SignupForm) SetProfileImageUrlNil() {
	o.ProfileImageUrl.Set(nil)
}

// UnsetProfileImageUrl ensures that no value is present for ProfileImageUrl, not even an explicit nil
func (o *SignupForm) UnsetProfileImageUrl() {
	o.ProfileImageUrl.Unset()
}

func (o SignupForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignupForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["email"] = o.Email
	toSerialize["password"] = o.Password
	if o.ProfileImageUrl.IsSet() {
		toSerialize["profile_image_url"] = o.ProfileImageUrl.Get()
	}
	return toSerialize, nil
}

func (o *SignupForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"email",
		"password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSignupForm := _SignupForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSignupForm)

	if err != nil {
		return err
	}

	*o = SignupForm(varSignupForm)

	return err
}

type NullableSignupForm struct {
	value *SignupForm
	isSet bool
}

func (v NullableSignupForm) Get() *SignupForm {
	return v.value
}

func (v *NullableSignupForm) Set(val *SignupForm) {
	v.value = val
	v.isSet = true
}

func (v NullableSignupForm) IsSet() bool {
	return v.isSet
}

func (v *NullableSignupForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignupForm(val *SignupForm) *NullableSignupForm {
	return &NullableSignupForm{value: val, isSet: true}
}

func (v NullableSignupForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignupForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


