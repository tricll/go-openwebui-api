/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GroupForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupForm{}

// GroupForm struct for GroupForm
type GroupForm struct {
	Name string `json:"name"`
	Description string `json:"description"`
}

type _GroupForm GroupForm

// NewGroupForm instantiates a new GroupForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupForm(name string, description string) *GroupForm {
	this := GroupForm{}
	this.Name = name
	this.Description = description
	return &this
}

// NewGroupFormWithDefaults instantiates a new GroupForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupFormWithDefaults() *GroupForm {
	this := GroupForm{}
	return &this
}

// GetName returns the Name field value
func (o *GroupForm) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GroupForm) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GroupForm) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *GroupForm) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *GroupForm) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *GroupForm) SetDescription(v string) {
	o.Description = v
}

func (o GroupForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	return toSerialize, nil
}

func (o *GroupForm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGroupForm := _GroupForm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGroupForm)

	if err != nil {
		return err
	}

	*o = GroupForm(varGroupForm)

	return err
}

type NullableGroupForm struct {
	value *GroupForm
	isSet bool
}

func (v NullableGroupForm) Get() *GroupForm {
	return v.value
}

func (v *NullableGroupForm) Set(val *GroupForm) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupForm) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupForm(val *GroupForm) *NullableGroupForm {
	return &NullableGroupForm{value: val, isSet: true}
}

func (v NullableGroupForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


