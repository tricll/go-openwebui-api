/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openwebuiapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LdapServerConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LdapServerConfig{}

// LdapServerConfig struct for LdapServerConfig
type LdapServerConfig struct {
	Label string `json:"label"`
	Host string `json:"host"`
	Port NullableInt32 `json:"port,omitempty"`
	AttributeForUsername *string `json:"attribute_for_username,omitempty"`
	AppDn string `json:"app_dn"`
	AppDnPassword string `json:"app_dn_password"`
	SearchBase string `json:"search_base"`
	SearchFilters *string `json:"search_filters,omitempty"`
	UseTls *bool `json:"use_tls,omitempty"`
	CertificatePath NullableString `json:"certificate_path,omitempty"`
	Ciphers NullableString `json:"ciphers,omitempty"`
}

type _LdapServerConfig LdapServerConfig

// NewLdapServerConfig instantiates a new LdapServerConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapServerConfig(label string, host string, appDn string, appDnPassword string, searchBase string) *LdapServerConfig {
	this := LdapServerConfig{}
	this.Label = label
	this.Host = host
	var attributeForUsername string = "uid"
	this.AttributeForUsername = &attributeForUsername
	this.AppDn = appDn
	this.AppDnPassword = appDnPassword
	this.SearchBase = searchBase
	var searchFilters string = ""
	this.SearchFilters = &searchFilters
	var useTls bool = true
	this.UseTls = &useTls
	return &this
}

// NewLdapServerConfigWithDefaults instantiates a new LdapServerConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapServerConfigWithDefaults() *LdapServerConfig {
	this := LdapServerConfig{}
	var attributeForUsername string = "uid"
	this.AttributeForUsername = &attributeForUsername
	var searchFilters string = ""
	this.SearchFilters = &searchFilters
	var useTls bool = true
	this.UseTls = &useTls
	return &this
}

// GetLabel returns the Label field value
func (o *LdapServerConfig) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *LdapServerConfig) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *LdapServerConfig) SetLabel(v string) {
	o.Label = v
}

// GetHost returns the Host field value
func (o *LdapServerConfig) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *LdapServerConfig) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *LdapServerConfig) SetHost(v string) {
	o.Host = v
}

// GetPort returns the Port field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LdapServerConfig) GetPort() int32 {
	if o == nil || IsNil(o.Port.Get()) {
		var ret int32
		return ret
	}
	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LdapServerConfig) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// HasPort returns a boolean if a field has been set.
func (o *LdapServerConfig) HasPort() bool {
	if o != nil && o.Port.IsSet() {
		return true
	}

	return false
}

// SetPort gets a reference to the given NullableInt32 and assigns it to the Port field.
func (o *LdapServerConfig) SetPort(v int32) {
	o.Port.Set(&v)
}
// SetPortNil sets the value for Port to be an explicit nil
func (o *LdapServerConfig) SetPortNil() {
	o.Port.Set(nil)
}

// UnsetPort ensures that no value is present for Port, not even an explicit nil
func (o *LdapServerConfig) UnsetPort() {
	o.Port.Unset()
}

// GetAttributeForUsername returns the AttributeForUsername field value if set, zero value otherwise.
func (o *LdapServerConfig) GetAttributeForUsername() string {
	if o == nil || IsNil(o.AttributeForUsername) {
		var ret string
		return ret
	}
	return *o.AttributeForUsername
}

// GetAttributeForUsernameOk returns a tuple with the AttributeForUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapServerConfig) GetAttributeForUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeForUsername) {
		return nil, false
	}
	return o.AttributeForUsername, true
}

// HasAttributeForUsername returns a boolean if a field has been set.
func (o *LdapServerConfig) HasAttributeForUsername() bool {
	if o != nil && !IsNil(o.AttributeForUsername) {
		return true
	}

	return false
}

// SetAttributeForUsername gets a reference to the given string and assigns it to the AttributeForUsername field.
func (o *LdapServerConfig) SetAttributeForUsername(v string) {
	o.AttributeForUsername = &v
}

// GetAppDn returns the AppDn field value
func (o *LdapServerConfig) GetAppDn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppDn
}

// GetAppDnOk returns a tuple with the AppDn field value
// and a boolean to check if the value has been set.
func (o *LdapServerConfig) GetAppDnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppDn, true
}

// SetAppDn sets field value
func (o *LdapServerConfig) SetAppDn(v string) {
	o.AppDn = v
}

// GetAppDnPassword returns the AppDnPassword field value
func (o *LdapServerConfig) GetAppDnPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppDnPassword
}

// GetAppDnPasswordOk returns a tuple with the AppDnPassword field value
// and a boolean to check if the value has been set.
func (o *LdapServerConfig) GetAppDnPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppDnPassword, true
}

// SetAppDnPassword sets field value
func (o *LdapServerConfig) SetAppDnPassword(v string) {
	o.AppDnPassword = v
}

// GetSearchBase returns the SearchBase field value
func (o *LdapServerConfig) GetSearchBase() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SearchBase
}

// GetSearchBaseOk returns a tuple with the SearchBase field value
// and a boolean to check if the value has been set.
func (o *LdapServerConfig) GetSearchBaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SearchBase, true
}

// SetSearchBase sets field value
func (o *LdapServerConfig) SetSearchBase(v string) {
	o.SearchBase = v
}

// GetSearchFilters returns the SearchFilters field value if set, zero value otherwise.
func (o *LdapServerConfig) GetSearchFilters() string {
	if o == nil || IsNil(o.SearchFilters) {
		var ret string
		return ret
	}
	return *o.SearchFilters
}

// GetSearchFiltersOk returns a tuple with the SearchFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapServerConfig) GetSearchFiltersOk() (*string, bool) {
	if o == nil || IsNil(o.SearchFilters) {
		return nil, false
	}
	return o.SearchFilters, true
}

// HasSearchFilters returns a boolean if a field has been set.
func (o *LdapServerConfig) HasSearchFilters() bool {
	if o != nil && !IsNil(o.SearchFilters) {
		return true
	}

	return false
}

// SetSearchFilters gets a reference to the given string and assigns it to the SearchFilters field.
func (o *LdapServerConfig) SetSearchFilters(v string) {
	o.SearchFilters = &v
}

// GetUseTls returns the UseTls field value if set, zero value otherwise.
func (o *LdapServerConfig) GetUseTls() bool {
	if o == nil || IsNil(o.UseTls) {
		var ret bool
		return ret
	}
	return *o.UseTls
}

// GetUseTlsOk returns a tuple with the UseTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapServerConfig) GetUseTlsOk() (*bool, bool) {
	if o == nil || IsNil(o.UseTls) {
		return nil, false
	}
	return o.UseTls, true
}

// HasUseTls returns a boolean if a field has been set.
func (o *LdapServerConfig) HasUseTls() bool {
	if o != nil && !IsNil(o.UseTls) {
		return true
	}

	return false
}

// SetUseTls gets a reference to the given bool and assigns it to the UseTls field.
func (o *LdapServerConfig) SetUseTls(v bool) {
	o.UseTls = &v
}

// GetCertificatePath returns the CertificatePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LdapServerConfig) GetCertificatePath() string {
	if o == nil || IsNil(o.CertificatePath.Get()) {
		var ret string
		return ret
	}
	return *o.CertificatePath.Get()
}

// GetCertificatePathOk returns a tuple with the CertificatePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LdapServerConfig) GetCertificatePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertificatePath.Get(), o.CertificatePath.IsSet()
}

// HasCertificatePath returns a boolean if a field has been set.
func (o *LdapServerConfig) HasCertificatePath() bool {
	if o != nil && o.CertificatePath.IsSet() {
		return true
	}

	return false
}

// SetCertificatePath gets a reference to the given NullableString and assigns it to the CertificatePath field.
func (o *LdapServerConfig) SetCertificatePath(v string) {
	o.CertificatePath.Set(&v)
}
// SetCertificatePathNil sets the value for CertificatePath to be an explicit nil
func (o *LdapServerConfig) SetCertificatePathNil() {
	o.CertificatePath.Set(nil)
}

// UnsetCertificatePath ensures that no value is present for CertificatePath, not even an explicit nil
func (o *LdapServerConfig) UnsetCertificatePath() {
	o.CertificatePath.Unset()
}

// GetCiphers returns the Ciphers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LdapServerConfig) GetCiphers() string {
	if o == nil || IsNil(o.Ciphers.Get()) {
		var ret string
		return ret
	}
	return *o.Ciphers.Get()
}

// GetCiphersOk returns a tuple with the Ciphers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LdapServerConfig) GetCiphersOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ciphers.Get(), o.Ciphers.IsSet()
}

// HasCiphers returns a boolean if a field has been set.
func (o *LdapServerConfig) HasCiphers() bool {
	if o != nil && o.Ciphers.IsSet() {
		return true
	}

	return false
}

// SetCiphers gets a reference to the given NullableString and assigns it to the Ciphers field.
func (o *LdapServerConfig) SetCiphers(v string) {
	o.Ciphers.Set(&v)
}
// SetCiphersNil sets the value for Ciphers to be an explicit nil
func (o *LdapServerConfig) SetCiphersNil() {
	o.Ciphers.Set(nil)
}

// UnsetCiphers ensures that no value is present for Ciphers, not even an explicit nil
func (o *LdapServerConfig) UnsetCiphers() {
	o.Ciphers.Unset()
}

func (o LdapServerConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LdapServerConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label"] = o.Label
	toSerialize["host"] = o.Host
	if o.Port.IsSet() {
		toSerialize["port"] = o.Port.Get()
	}
	if !IsNil(o.AttributeForUsername) {
		toSerialize["attribute_for_username"] = o.AttributeForUsername
	}
	toSerialize["app_dn"] = o.AppDn
	toSerialize["app_dn_password"] = o.AppDnPassword
	toSerialize["search_base"] = o.SearchBase
	if !IsNil(o.SearchFilters) {
		toSerialize["search_filters"] = o.SearchFilters
	}
	if !IsNil(o.UseTls) {
		toSerialize["use_tls"] = o.UseTls
	}
	if o.CertificatePath.IsSet() {
		toSerialize["certificate_path"] = o.CertificatePath.Get()
	}
	if o.Ciphers.IsSet() {
		toSerialize["ciphers"] = o.Ciphers.Get()
	}
	return toSerialize, nil
}

func (o *LdapServerConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
		"host",
		"app_dn",
		"app_dn_password",
		"search_base",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLdapServerConfig := _LdapServerConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLdapServerConfig)

	if err != nil {
		return err
	}

	*o = LdapServerConfig(varLdapServerConfig)

	return err
}

type NullableLdapServerConfig struct {
	value *LdapServerConfig
	isSet bool
}

func (v NullableLdapServerConfig) Get() *LdapServerConfig {
	return v.value
}

func (v *NullableLdapServerConfig) Set(val *LdapServerConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapServerConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapServerConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapServerConfig(val *LdapServerConfig) *NullableLdapServerConfig {
	return &NullableLdapServerConfig{value: val, isSet: true}
}

func (v NullableLdapServerConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapServerConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


