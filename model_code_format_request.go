/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openwebuiapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CodeFormatRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CodeFormatRequest{}

// CodeFormatRequest struct for CodeFormatRequest
type CodeFormatRequest struct {
	Code string `json:"code"`
}

type _CodeFormatRequest CodeFormatRequest

// NewCodeFormatRequest instantiates a new CodeFormatRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodeFormatRequest(code string) *CodeFormatRequest {
	this := CodeFormatRequest{}
	this.Code = code
	return &this
}

// NewCodeFormatRequestWithDefaults instantiates a new CodeFormatRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodeFormatRequestWithDefaults() *CodeFormatRequest {
	this := CodeFormatRequest{}
	return &this
}

// GetCode returns the Code field value
func (o *CodeFormatRequest) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *CodeFormatRequest) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *CodeFormatRequest) SetCode(v string) {
	o.Code = v
}

func (o CodeFormatRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CodeFormatRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	return toSerialize, nil
}

func (o *CodeFormatRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCodeFormatRequest := _CodeFormatRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCodeFormatRequest)

	if err != nil {
		return err
	}

	*o = CodeFormatRequest(varCodeFormatRequest)

	return err
}

type NullableCodeFormatRequest struct {
	value *CodeFormatRequest
	isSet bool
}

func (v NullableCodeFormatRequest) Get() *CodeFormatRequest {
	return v.value
}

func (v *NullableCodeFormatRequest) Set(val *CodeFormatRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCodeFormatRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCodeFormatRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodeFormatRequest(val *CodeFormatRequest) *NullableCodeFormatRequest {
	return &NullableCodeFormatRequest{value: val, isSet: true}
}

func (v NullableCodeFormatRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodeFormatRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


