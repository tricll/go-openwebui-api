openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
servers:
- url: /api/v1
paths:
  /configs/import:
    post:
      operationId: import_config_configs_import_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportConfigForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Import Config Configs Import Post
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Import Config
      tags:
      - configs
  /configs/export:
    get:
      operationId: export_config_configs_export_get
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Export Config Configs Export Get
                type: object
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Export Config
      tags:
      - configs
  /configs/models:
    get:
      operationId: get_models_config_configs_models_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelsConfigForm'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Models Config
      tags:
      - configs
    post:
      operationId: set_models_config_configs_models_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelsConfigForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelsConfigForm'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Set Models Config
      tags:
      - configs
  /configs/suggestions:
    post:
      operationId: set_default_suggestions_configs_suggestions_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDefaultSuggestionsForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PromptSuggestion'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Set Default Suggestions
      tags:
      - configs
  /configs/banners:
    get:
      operationId: get_banners_configs_banners_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BannerModel'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Banners
      tags:
      - configs
    post:
      operationId: set_banners_configs_banners_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetBannersForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BannerModel'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Set Banners
      tags:
      - configs
  /auths/:
    get:
      operationId: get_session_user_auths__get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionUserResponse'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Session User
      tags:
      - auths
  /auths/update/profile:
    post:
      operationId: update_profile_auths_update_profile_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/open_webui__apps__webui__models__auths__UserResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Profile
      tags:
      - auths
  /auths/update/password:
    post:
      operationId: update_password_auths_update_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Update Password Auths Update Password Post
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Password
      tags:
      - auths
  /auths/ldap:
    post:
      operationId: ldap_auth_auths_ldap_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigninResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Ldap Auth
      tags:
      - auths
  /auths/signin:
    post:
      operationId: signin_auths_signin_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigninForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionUserResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Signin
      tags:
      - auths
  /auths/signup:
    post:
      operationId: signup_auths_signup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionUserResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Signup
      tags:
      - auths
  /auths/signout:
    get:
      operationId: signout_auths_signout_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Signout
      tags:
      - auths
  /auths/add:
    post:
      operationId: add_user_auths_add_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigninResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add User
      tags:
      - auths
  /auths/admin/details:
    get:
      operationId: get_admin_details_auths_admin_details_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Admin Details
      tags:
      - auths
  /auths/admin/config:
    get:
      operationId: get_admin_config_auths_admin_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Admin Config
      tags:
      - auths
    post:
      operationId: update_admin_config_auths_admin_config_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Admin Config
      tags:
      - auths
  /auths/admin/config/ldap/server:
    get:
      operationId: get_ldap_server_auths_admin_config_ldap_server_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapServerConfig'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Ldap Server
      tags:
      - auths
    post:
      operationId: update_ldap_server_auths_admin_config_ldap_server_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapServerConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Ldap Server
      tags:
      - auths
  /auths/admin/config/ldap:
    get:
      operationId: get_ldap_config_auths_admin_config_ldap_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Ldap Config
      tags:
      - auths
    post:
      operationId: update_ldap_config_auths_admin_config_ldap_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapConfigForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Ldap Config
      tags:
      - auths
  /auths/api_key:
    delete:
      operationId: delete_api_key_auths_api_key_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Api Key Auths Api Key Delete
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete Api Key
      tags:
      - auths
    get:
      operationId: get_api_key_auths_api_key_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Api Key
      tags:
      - auths
    post:
      operationId: generate_api_key_auths_api_key_post
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Generate Api Key
      tags:
      - auths
  /users/:
    get:
      operationId: get_users_users__get
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserModel'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Users
      tags:
      - users
  /users/groups:
    get:
      operationId: get_user_groups_users_groups_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Groups
      tags:
      - users
  /users/permissions:
    get:
      operationId: get_user_permissisions_users_permissions_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Permissisions
      tags:
      - users
  /users/default/permissions:
    get:
      operationId: get_user_permissions_users_default_permissions_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Permissions
      tags:
      - users
    post:
      operationId: update_user_permissions_users_default_permissions_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermissions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update User Permissions
      tags:
      - users
  /users/update/role:
    post:
      operationId: update_user_role_users_update_role_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleUpdateForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update User Role
      tags:
      - users
  /users/user/settings:
    get:
      operationId: get_user_settings_by_session_user_users_user_settings_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Settings By Session User
      tags:
      - users
  /users/user/settings/update:
    post:
      operationId: update_user_settings_by_session_user_users_user_settings_update_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettings'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update User Settings By Session User
      tags:
      - users
  /users/user/info:
    get:
      operationId: get_user_info_by_session_user_users_user_info_get
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Info By Session User
      tags:
      - users
  /users/user/info/update:
    post:
      operationId: update_user_info_by_session_user_users_user_info_update_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update User Info By Session User
      tags:
      - users
  /users/{user_id}:
    delete:
      operationId: delete_user_by_id_users__user_id__delete
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete User By Id Users  User Id  Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete User By Id
      tags:
      - users
    get:
      operationId: get_user_by_id_users__user_id__get
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/open_webui__apps__webui__routers__users__UserResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get User By Id
      tags:
      - users
  /users/{user_id}/update:
    post:
      operationId: update_user_by_id_users__user_id__update_post
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update User By Id
      tags:
      - users
  /chats/list:
    get:
      operationId: get_session_user_chat_list_chats_list_get
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChatTitleIdResponse'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Session User Chat List
      tags:
      - chats
  /chats/:
    delete:
      operationId: delete_all_user_chats_chats__delete
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete All User Chats Chats  Delete
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete All User Chats
      tags:
      - chats
    get:
      operationId: get_session_user_chat_list_chats__get
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChatTitleIdResponse'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Session User Chat List
      tags:
      - chats
  /chats/list/user/{user_id}:
    get:
      operationId: get_user_chat_list_by_user_id_chats_list_user__user_id__get
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChatTitleIdResponse'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get User Chat List By User Id
      tags:
      - chats
  /chats/new:
    post:
      operationId: create_new_chat_chats_new_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Chat
      tags:
      - chats
  /chats/import:
    post:
      operationId: import_chat_chats_import_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatImportForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Import Chat
      tags:
      - chats
  /chats/search:
    get:
      operationId: search_user_chats_chats_search_get
      parameters:
      - explode: true
        in: query
        name: text
        required: true
        schema:
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChatTitleIdResponse'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search User Chats
      tags:
      - chats
  /chats/folder/{folder_id}:
    get:
      operationId: get_chats_by_folder_id_chats_folder__folder_id__get
      parameters:
      - explode: false
        in: path
        name: folder_id
        required: true
        schema:
          title: Folder Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChatResponse'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Chats By Folder Id
      tags:
      - chats
  /chats/pinned:
    get:
      operationId: get_user_pinned_chats_chats_pinned_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChatResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Pinned Chats
      tags:
      - chats
  /chats/all:
    get:
      operationId: get_user_chats_chats_all_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChatResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Chats
      tags:
      - chats
  /chats/all/archived:
    get:
      operationId: get_user_archived_chats_chats_all_archived_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChatResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Archived Chats
      tags:
      - chats
  /chats/all/tags:
    get:
      operationId: get_all_user_tags_chats_all_tags_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagModel'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get All User Tags
      tags:
      - chats
  /chats/all/db:
    get:
      operationId: get_all_user_chats_in_db_chats_all_db_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChatResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get All User Chats In Db
      tags:
      - chats
  /chats/archived:
    get:
      operationId: get_archived_session_user_chat_list_chats_archived_get
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChatTitleIdResponse'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Archived Session User Chat List
      tags:
      - chats
  /chats/archive/all:
    post:
      operationId: archive_all_chats_chats_archive_all_post
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Archive All Chats Chats Archive All Post
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Archive All Chats
      tags:
      - chats
  /chats/share/{share_id}:
    get:
      operationId: get_shared_chat_by_id_chats_share__share_id__get
      parameters:
      - explode: false
        in: path
        name: share_id
        required: true
        schema:
          title: Share Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Shared Chat By Id
      tags:
      - chats
  /chats/tags:
    post:
      operationId: get_user_chat_list_by_tag_name_chats_tags_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagFilterForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChatTitleIdResponse'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get User Chat List By Tag Name
      tags:
      - chats
  /chats/{id}:
    delete:
      operationId: delete_chat_by_id_chats__id__delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Chat By Id Chats  Id  Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Chat By Id
      tags:
      - chats
    get:
      operationId: get_chat_by_id_chats__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Chat By Id
      tags:
      - chats
    post:
      operationId: update_chat_by_id_chats__id__post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Chat By Id
      tags:
      - chats
  /chats/{id}/pinned:
    get:
      operationId: get_pinned_status_by_id_chats__id__pinned_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Pinned Status By Id
      tags:
      - chats
  /chats/{id}/pin:
    post:
      operationId: pin_chat_by_id_chats__id__pin_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Pin Chat By Id
      tags:
      - chats
  /chats/{id}/clone:
    post:
      operationId: clone_chat_by_id_chats__id__clone_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Clone Chat By Id
      tags:
      - chats
  /chats/{id}/archive:
    post:
      operationId: archive_chat_by_id_chats__id__archive_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Archive Chat By Id
      tags:
      - chats
  /chats/{id}/share:
    delete:
      operationId: delete_shared_chat_by_id_chats__id__share_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Shared Chat By Id
      tags:
      - chats
    post:
      operationId: share_chat_by_id_chats__id__share_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Share Chat By Id
      tags:
      - chats
  /chats/{id}/folder:
    post:
      operationId: update_chat_folder_id_by_id_chats__id__folder_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatFolderIdForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Chat Folder Id By Id
      tags:
      - chats
  /chats/{id}/tags:
    delete:
      operationId: delete_tag_by_id_and_tag_name_chats__id__tags_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagModel'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Tag By Id And Tag Name
      tags:
      - chats
    get:
      operationId: get_chat_tags_by_id_chats__id__tags_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagModel'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Chat Tags By Id
      tags:
      - chats
    post:
      operationId: add_tag_by_id_and_tag_name_chats__id__tags_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagModel'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add Tag By Id And Tag Name
      tags:
      - chats
  /chats/{id}/tags/all:
    delete:
      operationId: delete_all_tags_by_id_chats__id__tags_all_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete All Tags By Id
      tags:
      - chats
  /models/:
    get:
      operationId: get_models_models__get
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelUserResponse'
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Models
      tags:
      - models
  /models/base:
    get:
      operationId: get_base_models_models_base_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Base Models
      tags:
      - models
  /models/create:
    post:
      operationId: create_new_model_models_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Model
      tags:
      - models
  /models/model:
    get:
      operationId: get_model_by_id_models_model_get
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Model By Id
      tags:
      - models
  /models/model/toggle:
    post:
      operationId: toggle_model_by_id_models_model_toggle_post
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Toggle Model By Id
      tags:
      - models
  /models/model/update:
    post:
      operationId: update_model_by_id_models_model_update_post
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Model By Id
      tags:
      - models
  /models/model/delete:
    delete:
      operationId: delete_model_by_id_models_model_delete_delete
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Model By Id Models Model Delete Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Model By Id
      tags:
      - models
  /models/delete/all:
    delete:
      operationId: delete_all_models_models_delete_all_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete All Models Models Delete All Delete
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete All Models
      tags:
      - models
  /knowledge/:
    get:
      operationId: get_knowledge_knowledge__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KnowledgeUserResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Knowledge
      tags:
      - knowledge
  /knowledge/list:
    get:
      operationId: get_knowledge_list_knowledge_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KnowledgeUserResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Knowledge List
      tags:
      - knowledge
  /knowledge/create:
    post:
      operationId: create_new_knowledge_knowledge_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Knowledge
      tags:
      - knowledge
  /knowledge/{id}:
    get:
      operationId: get_knowledge_by_id_knowledge__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeFilesResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Knowledge By Id
      tags:
      - knowledge
  /knowledge/{id}/update:
    post:
      operationId: update_knowledge_by_id_knowledge__id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeFilesResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Knowledge By Id
      tags:
      - knowledge
  /knowledge/{id}/file/add:
    post:
      operationId: add_file_to_knowledge_by_id_knowledge__id__file_add_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeFileIdForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeFilesResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add File To Knowledge By Id
      tags:
      - knowledge
  /knowledge/{id}/file/update:
    post:
      operationId: update_file_from_knowledge_by_id_knowledge__id__file_update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeFileIdForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeFilesResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update File From Knowledge By Id
      tags:
      - knowledge
  /knowledge/{id}/file/remove:
    post:
      operationId: remove_file_from_knowledge_by_id_knowledge__id__file_remove_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeFileIdForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeFilesResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Remove File From Knowledge By Id
      tags:
      - knowledge
  /knowledge/{id}/delete:
    delete:
      operationId: delete_knowledge_by_id_knowledge__id__delete_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Knowledge By Id Knowledge  Id  Delete Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Knowledge By Id
      tags:
      - knowledge
  /knowledge/{id}/reset:
    post:
      operationId: reset_knowledge_by_id_knowledge__id__reset_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Reset Knowledge By Id
      tags:
      - knowledge
  /prompts/:
    get:
      operationId: get_prompts_prompts__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PromptModel'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Prompts
      tags:
      - prompts
  /prompts/list:
    get:
      operationId: get_prompt_list_prompts_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PromptUserResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Prompt List
      tags:
      - prompts
  /prompts/create:
    post:
      operationId: create_new_prompt_prompts_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Prompt
      tags:
      - prompts
  /prompts/command/{command}:
    get:
      operationId: get_prompt_by_command_prompts_command__command__get
      parameters:
      - explode: false
        in: path
        name: command
        required: true
        schema:
          title: Command
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Prompt By Command
      tags:
      - prompts
  /prompts/command/{command}/update:
    post:
      operationId: update_prompt_by_command_prompts_command__command__update_post
      parameters:
      - explode: false
        in: path
        name: command
        required: true
        schema:
          title: Command
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Prompt By Command
      tags:
      - prompts
  /prompts/command/{command}/delete:
    delete:
      operationId: delete_prompt_by_command_prompts_command__command__delete_delete
      parameters:
      - explode: false
        in: path
        name: command
        required: true
        schema:
          title: Command
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Prompt By Command Prompts Command  Command  Delete
                  Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Prompt By Command
      tags:
      - prompts
  /tools/:
    get:
      operationId: get_tools_tools__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolUserResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Tools
      tags:
      - tools
  /tools/list:
    get:
      operationId: get_tool_list_tools_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolUserResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Tool List
      tags:
      - tools
  /tools/export:
    get:
      operationId: export_tools_tools_export_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolModel'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Export Tools
      tags:
      - tools
  /tools/create:
    post:
      operationId: create_new_tools_tools_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Tools
      tags:
      - tools
  /tools/id/{id}:
    get:
      operationId: get_tools_by_id_tools_id__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Tools By Id
      tags:
      - tools
  /tools/id/{id}/update:
    post:
      operationId: update_tools_by_id_tools_id__id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Tools By Id
      tags:
      - tools
  /tools/id/{id}/delete:
    delete:
      operationId: delete_tools_by_id_tools_id__id__delete_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Tools By Id Tools Id  Id  Delete Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Tools By Id
      tags:
      - tools
  /tools/id/{id}/valves:
    get:
      operationId: get_tools_valves_by_id_tools_id__id__valves_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Tools Valves By Id
      tags:
      - tools
  /tools/id/{id}/valves/spec:
    get:
      operationId: get_tools_valves_spec_by_id_tools_id__id__valves_spec_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Tools Valves Spec By Id
      tags:
      - tools
  /tools/id/{id}/valves/update:
    post:
      operationId: update_tools_valves_by_id_tools_id__id__valves_update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Tools Valves By Id
      tags:
      - tools
  /tools/id/{id}/valves/user:
    get:
      operationId: get_tools_user_valves_by_id_tools_id__id__valves_user_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Tools User Valves By Id
      tags:
      - tools
  /tools/id/{id}/valves/user/spec:
    get:
      operationId: get_tools_user_valves_spec_by_id_tools_id__id__valves_user_spec_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Tools User Valves Spec By Id
      tags:
      - tools
  /tools/id/{id}/valves/user/update:
    post:
      operationId: update_tools_user_valves_by_id_tools_id__id__valves_user_update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Tools User Valves By Id
      tags:
      - tools
  /memories/ef:
    get:
      operationId: get_embeddings_memories_ef_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Embeddings
      tags:
      - memories
  /memories/:
    get:
      operationId: get_memories_memories__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MemoryModel'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Memories
      tags:
      - memories
  /memories/add:
    post:
      operationId: add_memory_memories_add_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMemoryForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoryModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add Memory
      tags:
      - memories
  /memories/query:
    post:
      operationId: query_memory_memories_query_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryMemoryForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Query Memory
      tags:
      - memories
  /memories/reset:
    post:
      operationId: reset_memory_from_vector_db_memories_reset_post
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Reset Memory From Vector Db Memories Reset Post
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Reset Memory From Vector Db
      tags:
      - memories
  /memories/delete/user:
    delete:
      operationId: delete_memory_by_user_id_memories_delete_user_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Memory By User Id Memories Delete User Delete
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete Memory By User Id
      tags:
      - memories
  /memories/{memory_id}/update:
    post:
      operationId: update_memory_by_id_memories__memory_id__update_post
      parameters:
      - explode: false
        in: path
        name: memory_id
        required: true
        schema:
          title: Memory Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemoryUpdateModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoryModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Memory By Id
      tags:
      - memories
  /memories/{memory_id}:
    delete:
      operationId: delete_memory_by_id_memories__memory_id__delete
      parameters:
      - explode: false
        in: path
        name: memory_id
        required: true
        schema:
          title: Memory Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Memory By Id Memories  Memory Id  Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Memory By Id
      tags:
      - memories
  /folders/:
    get:
      operationId: get_folders_folders__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FolderModel'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Folders
      tags:
      - folders
    post:
      operationId: create_folder_folders__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Folder
      tags:
      - folders
  /folders/{id}:
    delete:
      operationId: delete_folder_by_id_folders__id__delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Folder By Id
      tags:
      - folders
    get:
      operationId: get_folder_by_id_folders__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Folder By Id
      tags:
      - folders
  /folders/{id}/update:
    post:
      operationId: update_folder_name_by_id_folders__id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Folder Name By Id
      tags:
      - folders
  /folders/{id}/update/parent:
    post:
      operationId: update_folder_parent_id_by_id_folders__id__update_parent_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderParentIdForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Folder Parent Id By Id
      tags:
      - folders
  /folders/{id}/update/expanded:
    post:
      operationId: update_folder_is_expanded_by_id_folders__id__update_expanded_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderIsExpandedForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Folder Is Expanded By Id
      tags:
      - folders
  /groups/:
    get:
      operationId: get_groups_groups__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Groups
      tags:
      - groups
  /groups/create:
    post:
      operationId: create_new_function_groups_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Function
      tags:
      - groups
  /groups/id/{id}:
    get:
      operationId: get_group_by_id_groups_id__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Group By Id
      tags:
      - groups
  /groups/id/{id}/update:
    post:
      operationId: update_group_by_id_groups_id__id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Group By Id
      tags:
      - groups
  /groups/id/{id}/delete:
    delete:
      operationId: delete_group_by_id_groups_id__id__delete_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Group By Id Groups Id  Id  Delete Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Group By Id
      tags:
      - groups
  /files/:
    get:
      operationId: list_files_files__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileModelResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: List Files
      tags:
      - files
    post:
      operationId: upload_file_files__post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_file_files__post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileModelResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Upload File
      tags:
      - files
  /files/all:
    delete:
      operationId: delete_all_files_files_all_delete
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete All Files
      tags:
      - files
  /files/{id}:
    delete:
      operationId: delete_file_by_id_files__id__delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete File By Id
      tags:
      - files
    get:
      operationId: get_file_by_id_files__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get File By Id
      tags:
      - files
  /files/{id}/data/content:
    get:
      operationId: get_file_data_content_by_id_files__id__data_content_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get File Data Content By Id
      tags:
      - files
  /files/{id}/data/content/update:
    post:
      operationId: update_file_data_content_by_id_files__id__data_content_update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update File Data Content By Id
      tags:
      - files
  /files/{id}/content:
    get:
      operationId: get_file_content_by_id_files__id__content_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get File Content By Id
      tags:
      - files
  /files/{id}/content/html:
    get:
      operationId: get_html_file_content_by_id_files__id__content_html_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Html File Content By Id
      tags:
      - files
  /files/{id}/content/{file_name}:
    get:
      operationId: get_file_content_by_id_files__id__content__file_name__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get File Content By Id
      tags:
      - files
  /functions/:
    get:
      operationId: get_functions_functions__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FunctionResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Functions
      tags:
      - functions
  /functions/export:
    get:
      operationId: get_functions_functions_export_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FunctionModel'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Functions
      tags:
      - functions
  /functions/create:
    post:
      operationId: create_new_function_functions_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Function
      tags:
      - functions
  /functions/id/{id}:
    get:
      operationId: get_function_by_id_functions_id__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Function By Id
      tags:
      - functions
  /functions/id/{id}/toggle:
    post:
      operationId: toggle_function_by_id_functions_id__id__toggle_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Toggle Function By Id
      tags:
      - functions
  /functions/id/{id}/toggle/global:
    post:
      operationId: toggle_global_by_id_functions_id__id__toggle_global_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Toggle Global By Id
      tags:
      - functions
  /functions/id/{id}/update:
    post:
      operationId: update_function_by_id_functions_id__id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Function By Id
      tags:
      - functions
  /functions/id/{id}/delete:
    delete:
      operationId: delete_function_by_id_functions_id__id__delete_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Function By Id Functions Id  Id  Delete Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Function By Id
      tags:
      - functions
  /functions/id/{id}/valves:
    get:
      operationId: get_function_valves_by_id_functions_id__id__valves_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Function Valves By Id
      tags:
      - functions
  /functions/id/{id}/valves/spec:
    get:
      operationId: get_function_valves_spec_by_id_functions_id__id__valves_spec_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Function Valves Spec By Id
      tags:
      - functions
  /functions/id/{id}/valves/update:
    post:
      operationId: update_function_valves_by_id_functions_id__id__valves_update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Function Valves By Id
      tags:
      - functions
  /functions/id/{id}/valves/user:
    get:
      operationId: get_function_user_valves_by_id_functions_id__id__valves_user_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Function User Valves By Id
      tags:
      - functions
  /functions/id/{id}/valves/user/spec:
    get:
      operationId: get_function_user_valves_spec_by_id_functions_id__id__valves_user_spec_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Function User Valves Spec By Id
      tags:
      - functions
  /functions/id/{id}/valves/user/update:
    post:
      operationId: update_function_user_valves_by_id_functions_id__id__valves_user_update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Function User Valves By Id
      tags:
      - functions
  /evaluations/config:
    get:
      operationId: get_config_evaluations_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Config
      tags:
      - evaluations
    post:
      operationId: update_config_evaluations_config_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Config
      tags:
      - evaluations
  /evaluations/feedbacks/all:
    delete:
      operationId: delete_all_feedbacks_evaluations_feedbacks_all_delete
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete All Feedbacks
      tags:
      - evaluations
    get:
      operationId: get_all_feedbacks_evaluations_feedbacks_all_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FeedbackUserResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get All Feedbacks
      tags:
      - evaluations
  /evaluations/feedbacks/all/export:
    get:
      operationId: get_all_feedbacks_evaluations_feedbacks_all_export_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FeedbackModel'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get All Feedbacks
      tags:
      - evaluations
  /evaluations/feedbacks/user:
    get:
      operationId: get_feedbacks_evaluations_feedbacks_user_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FeedbackUserResponse'
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Feedbacks
      tags:
      - evaluations
  /evaluations/feedbacks:
    delete:
      operationId: delete_feedbacks_evaluations_feedbacks_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Feedbacks Evaluations Feedbacks Delete
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete Feedbacks
      tags:
      - evaluations
  /evaluations/feedback:
    post:
      operationId: create_feedback_evaluations_feedback_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Feedback
      tags:
      - evaluations
  /evaluations/feedback/{id}:
    delete:
      operationId: delete_feedback_by_id_evaluations_feedback__id__delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Feedback By Id
      tags:
      - evaluations
    get:
      operationId: get_feedback_by_id_evaluations_feedback__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Feedback By Id
      tags:
      - evaluations
    post:
      operationId: update_feedback_by_id_evaluations_feedback__id__post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackModel'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Feedback By Id
      tags:
      - evaluations
  /utils/gravatar:
    get:
      operationId: get_gravatar_utils_gravatar_get
      parameters:
      - explode: true
        in: query
        name: email
        required: true
        schema:
          title: Email
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Gravatar
      tags:
      - utils
  /utils/code/format:
    post:
      operationId: format_code_utils_code_format_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeFormatRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Format Code
      tags:
      - utils
  /utils/markdown:
    post:
      operationId: get_html_from_markdown_utils_markdown_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkdownForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Html From Markdown
      tags:
      - utils
  /utils/pdf:
    post:
      operationId: download_chat_as_pdf_utils_pdf_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatTitleMessagesForm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Download Chat As Pdf
      tags:
      - utils
  /utils/db/download:
    get:
      operationId: download_db_utils_db_download_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Download Db
      tags:
      - utils
  /utils/litellm/config:
    get:
      operationId: download_litellm_config_yaml_utils_litellm_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Download Litellm Config Yaml
      tags:
      - utils
  /:
    get:
      operationId: get_status__get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Status
components:
  schemas:
    AddMemoryForm:
      example:
        content: content
      properties:
        content:
          title: Content
          type: string
      required:
      - content
      title: AddMemoryForm
    AddUserForm:
      example:
        password: password
        role: role
        name: name
        profile_image_url: profile_image_url
        email: email
      properties:
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
        profile_image_url:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
      required:
      - email
      - name
      - password
      title: AddUserForm
    AdminConfig:
      example:
        SHOW_ADMIN_DETAILS: true
        ENABLE_API_KEY: true
        DEFAULT_USER_ROLE: DEFAULT_USER_ROLE
        ENABLE_MESSAGE_RATING: true
        ENABLE_COMMUNITY_SHARING: true
        ENABLE_SIGNUP: true
        JWT_EXPIRES_IN: JWT_EXPIRES_IN
      properties:
        SHOW_ADMIN_DETAILS:
          title: Show Admin Details
          type: boolean
        ENABLE_SIGNUP:
          title: Enable Signup
          type: boolean
        ENABLE_API_KEY:
          title: Enable Api Key
          type: boolean
        DEFAULT_USER_ROLE:
          title: Default User Role
          type: string
        JWT_EXPIRES_IN:
          title: Jwt Expires In
          type: string
        ENABLE_COMMUNITY_SHARING:
          title: Enable Community Sharing
          type: boolean
        ENABLE_MESSAGE_RATING:
          title: Enable Message Rating
          type: boolean
      required:
      - DEFAULT_USER_ROLE
      - ENABLE_API_KEY
      - ENABLE_COMMUNITY_SHARING
      - ENABLE_MESSAGE_RATING
      - ENABLE_SIGNUP
      - JWT_EXPIRES_IN
      - SHOW_ADMIN_DETAILS
      title: AdminConfig
    ApiKey:
      example:
        api_key: api_key
      properties:
        api_key:
          nullable: true
          type: string
      title: ApiKey
    BannerModel:
      example:
        dismissible: true
        id: id
        type: type
        title: title
        content: content
        timestamp: 0
      properties:
        id:
          title: Id
          type: string
        type:
          title: Type
          type: string
        title:
          nullable: true
          type: string
        content:
          title: Content
          type: string
        dismissible:
          title: Dismissible
          type: boolean
        timestamp:
          title: Timestamp
          type: integer
      required:
      - content
      - dismissible
      - id
      - timestamp
      - type
      title: BannerModel
    Body_upload_file_files__post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      title: Body_upload_file_files__post
    ChatFolderIdForm:
      example:
        folder_id: folder_id
      properties:
        folder_id:
          nullable: true
          type: string
      title: ChatFolderIdForm
    ChatForm:
      example:
        chat: "{}"
      properties:
        chat:
          title: Chat
          type: object
      required:
      - chat
      title: ChatForm
    ChatImportForm:
      example:
        pinned: true
        chat: "{}"
        meta: "{}"
        folder_id: folder_id
      properties:
        chat:
          title: Chat
          type: object
        meta:
          nullable: true
          type: object
        pinned:
          nullable: true
          type: boolean
        folder_id:
          nullable: true
          type: string
      required:
      - chat
      title: ChatImportForm
    ChatPermissions:
      example:
        temporary: true
        edit: true
        file_upload: true
        delete: true
      properties:
        file_upload:
          title: File Upload
          type: boolean
        delete:
          title: Delete
          type: boolean
        edit:
          title: Edit
          type: boolean
        temporary:
          title: Temporary
          type: boolean
      required:
      - delete
      - edit
      - file_upload
      - temporary
      title: ChatPermissions
    ChatResponse:
      example:
        share_id: share_id
        archived: true
        pinned: true
        updated_at: 0
        user_id: user_id
        chat: "{}"
        meta: "{}"
        created_at: 6
        id: id
        title: title
        folder_id: folder_id
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        title:
          title: Title
          type: string
        chat:
          title: Chat
          type: object
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
        share_id:
          nullable: true
          type: string
        archived:
          title: Archived
          type: boolean
        pinned:
          nullable: true
          type: boolean
        meta:
          default: {}
          title: Meta
          type: object
        folder_id:
          nullable: true
          type: string
      required:
      - archived
      - chat
      - created_at
      - id
      - title
      - updated_at
      - user_id
      title: ChatResponse
    ChatTitleIdResponse:
      example:
        updated_at: 0
        created_at: 6
        id: id
        title: title
      properties:
        id:
          title: Id
          type: string
        title:
          title: Title
          type: string
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - created_at
      - id
      - title
      - updated_at
      title: ChatTitleIdResponse
    ChatTitleMessagesForm:
      example:
        messages:
        - "{}"
        - "{}"
        title: title
      properties:
        title:
          title: Title
          type: string
        messages:
          items:
            type: object
          type: array
      required:
      - messages
      - title
      title: ChatTitleMessagesForm
    CodeFormatRequest:
      example:
        code: code
      properties:
        code:
          title: Code
          type: string
      required:
      - code
      title: CodeFormatRequest
    ContentForm:
      example:
        content: content
      properties:
        content:
          title: Content
          type: string
      required:
      - content
      title: ContentForm
    FeedbackForm:
      additionalProperties: {}
      example:
        data:
          reason: Reason
          sibling_model_ids:
          - Sibling_Model_Ids
          - Sibling_Model_Ids
          rating: Rating
          comment: Comment
          model_id: Model_Id
        meta: "{}"
        type: type
        snapshot:
          chat: "{}"
      properties:
        type:
          title: Type
        data:
          $ref: '#/components/schemas/FeedbackForm_data'
        meta:
          $ref: '#/components/schemas/Meta'
        snapshot:
          $ref: '#/components/schemas/FeedbackForm_snapshot'
      required:
      - type
      title: FeedbackForm
    FeedbackModel:
      example:
        data: "{}"
        updated_at: 1
        user_id: user_id
        meta: "{}"
        created_at: 6
        id: id
        type: type
        version: 0
        snapshot: "{}"
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        version:
          title: Version
          type: integer
        type:
          title: Type
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        snapshot:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
      required:
      - created_at
      - id
      - type
      - updated_at
      - user_id
      - version
      title: FeedbackModel
    FeedbackUserResponse:
      example:
        data: "{}"
        updated_at: 1
        user_id: user_id
        meta: "{}"
        created_at: 6
        id: id
        type: type
        version: 0
        user:
          settings:
            ui: "{}"
          role: pending
          updated_at: 6
          last_active_at: 0
          api_key: api_key
          oauth_sub: oauth_sub
          name: name
          created_at: 1
          profile_image_url: profile_image_url
          id: id
          email: email
          info: "{}"
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        version:
          title: Version
          type: integer
        type:
          title: Type
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        user:
          $ref: '#/components/schemas/UserModel'
      required:
      - created_at
      - id
      - type
      - updated_at
      - user_id
      - version
      title: FeedbackUserResponse
    FileMeta:
      additionalProperties: {}
      example:
        content_type: Content_Type
        size: 0
        name: Name
      properties:
        name:
          $ref: '#/components/schemas/Name'
        content_type:
          $ref: '#/components/schemas/Content_Type'
        size:
          $ref: '#/components/schemas/Size'
      title: FileMeta
    FileMetadataResponse:
      example:
        updated_at: 5
        meta: "{}"
        created_at: 1
        id: id
      properties:
        id:
          title: Id
          type: string
        meta:
          title: Meta
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
      required:
      - created_at
      - id
      - meta
      - updated_at
      title: FileMetadataResponse
    FileModel:
      example:
        path: path
        filename: filename
        data: "{}"
        updated_at: 5
        user_id: user_id
        meta: "{}"
        created_at: 1
        id: id
        hash: hash
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        hash:
          nullable: true
          type: string
        filename:
          title: Filename
          type: string
        path:
          nullable: true
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        created_at:
          nullable: true
          type: integer
        updated_at:
          nullable: true
          type: integer
      required:
      - created_at
      - filename
      - id
      - updated_at
      - user_id
      title: FileModel
    FileModelResponse:
      additionalProperties: {}
      example:
        filename: filename
        data: "{}"
        updated_at: 1
        user_id: user_id
        meta:
          content_type: Content_Type
          size: 0
          name: Name
        created_at: 6
        id: id
        hash: Hash
      properties:
        id:
          title: Id
        user_id:
          title: User Id
        hash:
          $ref: '#/components/schemas/Hash'
        filename:
          title: Filename
        data:
          $ref: '#/components/schemas/Data'
        meta:
          $ref: '#/components/schemas/FileMeta'
        created_at:
          title: Created At
        updated_at:
          title: Updated At
      required:
      - created_at
      - filename
      - id
      - meta
      - updated_at
      - user_id
      title: FileModelResponse
    FolderForm:
      additionalProperties: {}
      example:
        name: name
      properties:
        name:
          title: Name
      required:
      - name
      title: FolderForm
    FolderIsExpandedForm:
      example:
        is_expanded: true
      properties:
        is_expanded:
          title: Is Expanded
          type: boolean
      required:
      - is_expanded
      title: FolderIsExpandedForm
    FolderModel:
      example:
        is_expanded: false
        updated_at: 6
        user_id: user_id
        parent_id: parent_id
        meta: "{}"
        name: name
        created_at: 0
        id: id
        items: "{}"
      properties:
        id:
          title: Id
          type: string
        parent_id:
          nullable: true
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        items:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        is_expanded:
          default: false
          title: Is Expanded
          type: boolean
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
      required:
      - created_at
      - id
      - name
      - updated_at
      - user_id
      title: FolderModel
    FolderParentIdForm:
      example:
        parent_id: parent_id
      properties:
        parent_id:
          nullable: true
          type: string
      title: FolderParentIdForm
    FunctionForm:
      example:
        meta:
          manifest: "{}"
          description: description
        name: name
        id: id
        content: content
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        content:
          title: Content
          type: string
        meta:
          $ref: '#/components/schemas/FunctionMeta'
      required:
      - content
      - id
      - meta
      - name
      title: FunctionForm
    FunctionMeta:
      example:
        manifest: "{}"
        description: description
      properties:
        description:
          nullable: true
          type: string
        manifest:
          nullable: true
          type: object
      title: FunctionMeta
    FunctionModel:
      example:
        is_active: false
        updated_at: 0
        user_id: user_id
        meta:
          manifest: "{}"
          description: description
        name: name
        is_global: false
        created_at: 6
        id: id
        type: type
        content: content
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        type:
          title: Type
          type: string
        content:
          title: Content
          type: string
        meta:
          $ref: '#/components/schemas/FunctionMeta'
        is_active:
          default: false
          title: Is Active
          type: boolean
        is_global:
          default: false
          title: Is Global
          type: boolean
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - content
      - created_at
      - id
      - meta
      - name
      - type
      - updated_at
      - user_id
      title: FunctionModel
    FunctionResponse:
      example:
        is_active: true
        updated_at: 0
        user_id: user_id
        meta:
          manifest: "{}"
          description: description
        name: name
        is_global: true
        created_at: 6
        id: id
        type: type
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        type:
          title: Type
          type: string
        name:
          title: Name
          type: string
        meta:
          $ref: '#/components/schemas/FunctionMeta'
        is_active:
          title: Is Active
          type: boolean
        is_global:
          title: Is Global
          type: boolean
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - created_at
      - id
      - is_active
      - is_global
      - meta
      - name
      - type
      - updated_at
      - user_id
      title: FunctionResponse
    GroupForm:
      example:
        name: name
        description: description
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
      required:
      - description
      - name
      title: GroupForm
    GroupResponse:
      example:
        data: "{}"
        updated_at: 6
        user_id: user_id
        permissions: "{}"
        meta: "{}"
        user_ids:
        - user_ids
        - user_ids
        name: name
        description: description
        created_at: 0
        id: id
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        permissions:
          nullable: true
          type: object
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        user_ids:
          default: []
          items:
            type: string
          type: array
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
      required:
      - created_at
      - description
      - id
      - name
      - updated_at
      - user_id
      title: GroupResponse
    GroupUpdateForm:
      example:
        permissions: "{}"
        user_ids:
        - user_ids
        - user_ids
        name: name
        description: description
        admin_ids:
        - admin_ids
        - admin_ids
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        permissions:
          nullable: true
          type: object
        user_ids:
          items:
            type: string
          nullable: true
          type: array
        admin_ids:
          items:
            type: string
          nullable: true
          type: array
      required:
      - description
      - name
      title: GroupUpdateForm
    HTTPValidationError:
      example:
        detail:
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      title: HTTPValidationError
    ImportConfigForm:
      example:
        config: "{}"
      properties:
        config:
          title: Config
          type: object
      required:
      - config
      title: ImportConfigForm
    KnowledgeFileIdForm:
      example:
        file_id: file_id
      properties:
        file_id:
          title: File Id
          type: string
      required:
      - file_id
      title: KnowledgeFileIdForm
    KnowledgeFilesResponse:
      example:
        data: "{}"
        updated_at: 6
        user_id: user_id
        meta: "{}"
        access_control: "{}"
        name: name
        description: description
        created_at: 0
        files:
        - path: path
          filename: filename
          data: "{}"
          updated_at: 5
          user_id: user_id
          meta: "{}"
          created_at: 1
          id: id
          hash: hash
        - path: path
          filename: filename
          data: "{}"
          updated_at: 5
          user_id: user_id
          meta: "{}"
          created_at: 1
          id: id
          hash: hash
        id: id
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        files:
          items:
            $ref: '#/components/schemas/FileModel'
          type: array
      required:
      - created_at
      - description
      - files
      - id
      - name
      - updated_at
      - user_id
      title: KnowledgeFilesResponse
    KnowledgeForm:
      example:
        data: "{}"
        access_control: "{}"
        name: name
        description: description
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        data:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
      required:
      - description
      - name
      title: KnowledgeForm
    KnowledgeResponse:
      example:
        data: "{}"
        updated_at: 6
        user_id: user_id
        meta: "{}"
        access_control: "{}"
        name: name
        description: description
        created_at: 0
        files:
        - updated_at: 5
          meta: "{}"
          created_at: 1
          id: id
        - updated_at: 5
          meta: "{}"
          created_at: 1
          id: id
        id: id
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        files:
          items:
            $ref: '#/components/schemas/KnowledgeResponse_files_inner'
          nullable: true
          type: array
      required:
      - created_at
      - description
      - id
      - name
      - updated_at
      - user_id
      title: KnowledgeResponse
    KnowledgeUserResponse:
      example:
        data: "{}"
        updated_at: 6
        user_id: user_id
        meta: "{}"
        access_control: "{}"
        name: name
        description: description
        created_at: 0
        files:
        - updated_at: 5
          meta: "{}"
          created_at: 1
          id: id
        - updated_at: 5
          meta: "{}"
          created_at: 1
          id: id
        id: id
        user:
          role: role
          name: name
          profile_image_url: profile_image_url
          id: id
          email: email
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        user:
          $ref: '#/components/schemas/open_webui__apps__webui__models__users__UserResponse'
        files:
          items:
            $ref: '#/components/schemas/KnowledgeResponse_files_inner'
          nullable: true
          type: array
      required:
      - created_at
      - description
      - id
      - name
      - updated_at
      - user_id
      title: KnowledgeUserResponse
    LdapConfigForm:
      example:
        enable_ldap: true
      properties:
        enable_ldap:
          nullable: true
          type: boolean
      title: LdapConfigForm
    LdapForm:
      example:
        password: password
        user: user
      properties:
        user:
          title: User
          type: string
        password:
          title: Password
          type: string
      required:
      - password
      - user
      title: LdapForm
    LdapServerConfig:
      example:
        use_tls: true
        certificate_path: certificate_path
        port: 0
        host: host
        attribute_for_username: uid
        ciphers: ciphers
        search_filters: ""
        label: label
        search_base: search_base
        app_dn: app_dn
        app_dn_password: app_dn_password
      properties:
        label:
          title: Label
          type: string
        host:
          title: Host
          type: string
        port:
          nullable: true
          type: integer
        attribute_for_username:
          default: uid
          title: Attribute For Username
          type: string
        app_dn:
          title: App Dn
          type: string
        app_dn_password:
          title: App Dn Password
          type: string
        search_base:
          title: Search Base
          type: string
        search_filters:
          default: ""
          title: Search Filters
          type: string
        use_tls:
          default: true
          title: Use Tls
          type: boolean
        certificate_path:
          nullable: true
          type: string
        ciphers:
          nullable: true
          type: string
      required:
      - app_dn
      - app_dn_password
      - host
      - label
      - search_base
      title: LdapServerConfig
    MarkdownForm:
      example:
        md: md
      properties:
        md:
          title: Md
          type: string
      required:
      - md
      title: MarkdownForm
    MemoryModel:
      example:
        updated_at: 0
        user_id: user_id
        created_at: 6
        id: id
        content: content
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        content:
          title: Content
          type: string
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - content
      - created_at
      - id
      - updated_at
      - user_id
      title: MemoryModel
    MemoryUpdateModel:
      example:
        content: content
      properties:
        content:
          nullable: true
          type: string
      title: MemoryUpdateModel
    ModelForm:
      example:
        base_model_id: base_model_id
        is_active: true
        meta:
          capabilities: "{}"
          description: Description
          profile_image_url: Profile_Image_Url
        access_control: "{}"
        name: name
        id: id
        params:
          key: ""
      properties:
        id:
          title: Id
          type: string
        base_model_id:
          nullable: true
          type: string
        name:
          title: Name
          type: string
        meta:
          $ref: '#/components/schemas/ModelMeta'
        params:
          additionalProperties: {}
          properties: {}
          title: ModelParams
        access_control:
          nullable: true
          type: object
        is_active:
          default: true
          title: Is Active
          type: boolean
      required:
      - id
      - meta
      - name
      - params
      title: ModelForm
    ModelMeta:
      additionalProperties: {}
      example:
        capabilities: "{}"
        description: Description
        profile_image_url: Profile_Image_Url
      properties:
        profile_image_url:
          $ref: '#/components/schemas/Profile_Image_Url'
        description:
          $ref: '#/components/schemas/Description'
        capabilities:
          $ref: '#/components/schemas/Capabilities'
      title: ModelMeta
    ModelModel:
      example:
        base_model_id: base_model_id
        is_active: true
        updated_at: 0
        user_id: user_id
        meta:
          capabilities: "{}"
          description: Description
          profile_image_url: Profile_Image_Url
        access_control: "{}"
        name: name
        created_at: 6
        id: id
        params:
          key: ""
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        base_model_id:
          nullable: true
          type: string
        name:
          title: Name
          type: string
        params:
          additionalProperties: {}
          properties: {}
          title: ModelParams
        meta:
          $ref: '#/components/schemas/ModelMeta'
        access_control:
          nullable: true
          type: object
        is_active:
          title: Is Active
          type: boolean
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - created_at
      - id
      - is_active
      - meta
      - name
      - params
      - updated_at
      - user_id
      title: ModelModel
    ModelParams:
      additionalProperties: {}
      properties: {}
      title: ModelParams
    ModelResponse:
      example:
        base_model_id: base_model_id
        is_active: true
        updated_at: 0
        user_id: user_id
        meta:
          capabilities: "{}"
          description: Description
          profile_image_url: Profile_Image_Url
        access_control: "{}"
        name: name
        created_at: 6
        id: id
        params:
          key: ""
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        base_model_id:
          nullable: true
          type: string
        name:
          title: Name
          type: string
        params:
          additionalProperties: {}
          properties: {}
          title: ModelParams
        meta:
          $ref: '#/components/schemas/ModelMeta'
        access_control:
          nullable: true
          type: object
        is_active:
          title: Is Active
          type: boolean
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - created_at
      - id
      - is_active
      - meta
      - name
      - params
      - updated_at
      - user_id
      title: ModelResponse
    ModelUserResponse:
      example:
        base_model_id: base_model_id
        is_active: true
        updated_at: 0
        user_id: user_id
        meta:
          capabilities: "{}"
          description: Description
          profile_image_url: Profile_Image_Url
        access_control: "{}"
        name: name
        created_at: 6
        id: id
        params:
          key: ""
        user:
          role: role
          name: name
          profile_image_url: profile_image_url
          id: id
          email: email
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        base_model_id:
          nullable: true
          type: string
        name:
          title: Name
          type: string
        params:
          additionalProperties: {}
          properties: {}
          title: ModelParams
        meta:
          $ref: '#/components/schemas/ModelMeta'
        access_control:
          nullable: true
          type: object
        is_active:
          title: Is Active
          type: boolean
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
        user:
          $ref: '#/components/schemas/open_webui__apps__webui__models__users__UserResponse'
      required:
      - created_at
      - id
      - is_active
      - meta
      - name
      - params
      - updated_at
      - user_id
      title: ModelUserResponse
    ModelsConfigForm:
      example:
        DEFAULT_MODELS: DEFAULT_MODELS
        MODEL_ORDER_LIST:
        - MODEL_ORDER_LIST
        - MODEL_ORDER_LIST
      properties:
        DEFAULT_MODELS:
          nullable: true
          type: string
        MODEL_ORDER_LIST:
          items:
            type: string
          nullable: true
          type: array
      required:
      - DEFAULT_MODELS
      - MODEL_ORDER_LIST
      title: ModelsConfigForm
    PromptForm:
      example:
        access_control: "{}"
        title: title
        command: command
        content: content
      properties:
        command:
          title: Command
          type: string
        title:
          title: Title
          type: string
        content:
          title: Content
          type: string
        access_control:
          nullable: true
          type: object
      required:
      - command
      - content
      - title
      title: PromptForm
    PromptModel:
      example:
        user_id: user_id
        access_control: "{}"
        title: title
        command: command
        content: content
        timestamp: 0
      properties:
        command:
          title: Command
          type: string
        user_id:
          title: User Id
          type: string
        title:
          title: Title
          type: string
        content:
          title: Content
          type: string
        timestamp:
          title: Timestamp
          type: integer
        access_control:
          nullable: true
          type: object
      required:
      - command
      - content
      - timestamp
      - title
      - user_id
      title: PromptModel
    PromptSuggestion:
      example:
        title:
        - title
        - title
        content: content
      properties:
        title:
          items:
            type: string
          type: array
        content:
          title: Content
          type: string
      required:
      - content
      - title
      title: PromptSuggestion
    PromptUserResponse:
      example:
        user_id: user_id
        access_control: "{}"
        title: title
        user:
          role: role
          name: name
          profile_image_url: profile_image_url
          id: id
          email: email
        command: command
        content: content
        timestamp: 0
      properties:
        command:
          title: Command
          type: string
        user_id:
          title: User Id
          type: string
        title:
          title: Title
          type: string
        content:
          title: Content
          type: string
        timestamp:
          title: Timestamp
          type: integer
        access_control:
          nullable: true
          type: object
        user:
          $ref: '#/components/schemas/open_webui__apps__webui__models__users__UserResponse'
      required:
      - command
      - content
      - timestamp
      - title
      - user_id
      title: PromptUserResponse
    QueryMemoryForm:
      example:
        k: 0
        content: content
      properties:
        content:
          title: Content
          type: string
        k:
          nullable: true
          type: integer
      required:
      - content
      title: QueryMemoryForm
    RatingData:
      additionalProperties: {}
      example:
        reason: Reason
        sibling_model_ids:
        - Sibling_Model_Ids
        - Sibling_Model_Ids
        rating: Rating
        comment: Comment
        model_id: Model_Id
      properties:
        rating:
          $ref: '#/components/schemas/Rating'
        model_id:
          $ref: '#/components/schemas/Model_Id'
        sibling_model_ids:
          $ref: '#/components/schemas/Sibling_Model_Ids'
        reason:
          $ref: '#/components/schemas/Reason'
        comment:
          $ref: '#/components/schemas/Comment'
      title: RatingData
    SessionUserResponse:
      example:
        role: role
        expires_at: 0
        permissions: "{}"
        name: name
        profile_image_url: profile_image_url
        id: id
        token_type: token_type
        email: email
        token: token
      properties:
        id:
          title: Id
          type: string
        email:
          title: Email
          type: string
        name:
          title: Name
          type: string
        role:
          title: Role
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
        token:
          title: Token
          type: string
        token_type:
          title: Token Type
          type: string
        expires_at:
          nullable: true
          type: integer
        permissions:
          nullable: true
          type: object
      required:
      - email
      - id
      - name
      - profile_image_url
      - role
      - token
      - token_type
      title: SessionUserResponse
    SetBannersForm:
      example:
        banners:
        - dismissible: true
          id: id
          type: type
          title: title
          content: content
          timestamp: 0
        - dismissible: true
          id: id
          type: type
          title: title
          content: content
          timestamp: 0
      properties:
        banners:
          items:
            $ref: '#/components/schemas/BannerModel'
          type: array
      required:
      - banners
      title: SetBannersForm
    SetDefaultSuggestionsForm:
      example:
        suggestions:
        - title:
          - title
          - title
          content: content
        - title:
          - title
          - title
          content: content
      properties:
        suggestions:
          items:
            $ref: '#/components/schemas/PromptSuggestion'
          type: array
      required:
      - suggestions
      title: SetDefaultSuggestionsForm
    SigninForm:
      example:
        password: password
        email: email
      properties:
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
      required:
      - email
      - password
      title: SigninForm
    SigninResponse:
      example:
        role: role
        name: name
        profile_image_url: profile_image_url
        id: id
        token_type: token_type
        email: email
        token: token
      properties:
        id:
          title: Id
          type: string
        email:
          title: Email
          type: string
        name:
          title: Name
          type: string
        role:
          title: Role
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
        token:
          title: Token
          type: string
        token_type:
          title: Token Type
          type: string
      required:
      - email
      - id
      - name
      - profile_image_url
      - role
      - token
      - token_type
      title: SigninResponse
    SignupForm:
      example:
        password: password
        name: name
        profile_image_url: profile_image_url
        email: email
      properties:
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
        profile_image_url:
          nullable: true
          type: string
      required:
      - email
      - name
      - password
      title: SignupForm
    SnapshotData:
      additionalProperties: {}
      example:
        chat: "{}"
      properties:
        chat:
          $ref: '#/components/schemas/Chat'
      title: SnapshotData
    TagFilterForm:
      example:
        name: name
        limit: 6
        skip: 0
      properties:
        name:
          title: Name
          type: string
        skip:
          nullable: true
          type: integer
        limit:
          nullable: true
          type: integer
      required:
      - name
      title: TagFilterForm
    TagForm:
      example:
        name: name
      properties:
        name:
          title: Name
          type: string
      required:
      - name
      title: TagForm
    TagModel:
      example:
        user_id: user_id
        meta: "{}"
        name: name
        id: id
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        user_id:
          title: User Id
          type: string
        meta:
          nullable: true
          type: object
      required:
      - id
      - name
      - user_id
      title: TagModel
    ToolForm:
      example:
        meta:
          manifest: "{}"
          description: description
        access_control: "{}"
        name: name
        id: id
        content: content
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        content:
          title: Content
          type: string
        meta:
          $ref: '#/components/schemas/ToolMeta'
        access_control:
          nullable: true
          type: object
      required:
      - content
      - id
      - meta
      - name
      title: ToolForm
    ToolMeta:
      example:
        manifest: "{}"
        description: description
      properties:
        description:
          nullable: true
          type: string
        manifest:
          nullable: true
          type: object
      title: ToolMeta
    ToolModel:
      example:
        specs:
        - "{}"
        - "{}"
        updated_at: 0
        user_id: user_id
        meta:
          manifest: "{}"
          description: description
        access_control: "{}"
        name: name
        created_at: 6
        id: id
        content: content
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        content:
          title: Content
          type: string
        specs:
          items:
            type: object
          type: array
        meta:
          $ref: '#/components/schemas/ToolMeta'
        access_control:
          nullable: true
          type: object
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - content
      - created_at
      - id
      - meta
      - name
      - specs
      - updated_at
      - user_id
      title: ToolModel
    ToolResponse:
      example:
        updated_at: 0
        user_id: user_id
        meta:
          manifest: "{}"
          description: description
        access_control: "{}"
        name: name
        created_at: 6
        id: id
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        meta:
          $ref: '#/components/schemas/ToolMeta'
        access_control:
          nullable: true
          type: object
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - created_at
      - id
      - meta
      - name
      - updated_at
      - user_id
      title: ToolResponse
    ToolUserResponse:
      example:
        updated_at: 0
        user_id: user_id
        meta:
          manifest: "{}"
          description: description
        access_control: "{}"
        name: name
        created_at: 6
        id: id
        user:
          role: role
          name: name
          profile_image_url: profile_image_url
          id: id
          email: email
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        meta:
          $ref: '#/components/schemas/ToolMeta'
        access_control:
          nullable: true
          type: object
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
        user:
          $ref: '#/components/schemas/open_webui__apps__webui__models__users__UserResponse'
      required:
      - created_at
      - id
      - meta
      - name
      - updated_at
      - user_id
      title: ToolUserResponse
    UpdateConfigForm:
      example:
        ENABLE_EVALUATION_ARENA_MODELS: true
        EVALUATION_ARENA_MODELS:
        - "{}"
        - "{}"
      properties:
        ENABLE_EVALUATION_ARENA_MODELS:
          nullable: true
          type: boolean
        EVALUATION_ARENA_MODELS:
          items:
            type: object
          nullable: true
          type: array
      title: UpdateConfigForm
    UpdatePasswordForm:
      example:
        password: password
        new_password: new_password
      properties:
        password:
          title: Password
          type: string
        new_password:
          title: New Password
          type: string
      required:
      - new_password
      - password
      title: UpdatePasswordForm
    UpdateProfileForm:
      example:
        name: name
        profile_image_url: profile_image_url
      properties:
        profile_image_url:
          title: Profile Image Url
          type: string
        name:
          title: Name
          type: string
      required:
      - name
      - profile_image_url
      title: UpdateProfileForm
    UserModel:
      example:
        settings:
          ui: "{}"
        role: pending
        updated_at: 6
        last_active_at: 0
        api_key: api_key
        oauth_sub: oauth_sub
        name: name
        created_at: 1
        profile_image_url: profile_image_url
        id: id
        email: email
        info: "{}"
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
        role:
          default: pending
          title: Role
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
        last_active_at:
          title: Last Active At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
        api_key:
          nullable: true
          type: string
        settings:
          $ref: '#/components/schemas/UserSettings'
        info:
          nullable: true
          type: object
        oauth_sub:
          nullable: true
          type: string
      required:
      - created_at
      - email
      - id
      - last_active_at
      - name
      - profile_image_url
      - updated_at
      title: UserModel
    UserPermissions:
      example:
        workspace:
          models: true
          tools: true
          prompts: true
          knowledge: true
        chat:
          temporary: true
          edit: true
          file_upload: true
          delete: true
      properties:
        workspace:
          $ref: '#/components/schemas/WorkspacePermissions'
        chat:
          $ref: '#/components/schemas/ChatPermissions'
      required:
      - chat
      - workspace
      title: UserPermissions
    UserRoleUpdateForm:
      example:
        role: role
        id: id
      properties:
        id:
          title: Id
          type: string
        role:
          title: Role
          type: string
      required:
      - id
      - role
      title: UserRoleUpdateForm
    UserSettings:
      additionalProperties: {}
      example:
        ui: "{}"
      properties:
        ui:
          $ref: '#/components/schemas/Ui'
      title: UserSettings
    UserUpdateForm:
      example:
        password: password
        name: name
        profile_image_url: profile_image_url
        email: email
      properties:
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
        password:
          nullable: true
          type: string
      required:
      - email
      - name
      - profile_image_url
      title: UserUpdateForm
    ValidationError:
      example:
        msg: msg
        loc:
        - ValidationError_loc_inner
        - ValidationError_loc_inner
        type: type
      properties:
        loc:
          items:
            $ref: '#/components/schemas/ValidationError_loc_inner'
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
    WorkspacePermissions:
      example:
        models: true
        tools: true
        prompts: true
        knowledge: true
      properties:
        models:
          title: Models
          type: boolean
        knowledge:
          title: Knowledge
          type: boolean
        prompts:
          title: Prompts
          type: boolean
        tools:
          title: Tools
          type: boolean
      required:
      - knowledge
      - models
      - prompts
      - tools
      title: WorkspacePermissions
    open_webui__apps__webui__models__auths__UserResponse:
      example:
        role: role
        name: name
        profile_image_url: profile_image_url
        id: id
        email: email
      properties:
        id:
          title: Id
          type: string
        email:
          title: Email
          type: string
        name:
          title: Name
          type: string
        role:
          title: Role
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
      required:
      - email
      - id
      - name
      - profile_image_url
      - role
      title: UserResponse
    open_webui__apps__webui__models__users__UserResponse:
      example:
        role: role
        name: name
        profile_image_url: profile_image_url
        id: id
        email: email
      properties:
        id:
          title: Id
          type: string
        email:
          title: Email
          type: string
        name:
          title: Name
          type: string
        role:
          title: Role
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
      required:
      - email
      - id
      - name
      - profile_image_url
      - role
      title: UserResponse
    open_webui__apps__webui__routers__users__UserResponse:
      example:
        name: name
        profile_image_url: profile_image_url
      properties:
        name:
          title: Name
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
      required:
      - name
      - profile_image_url
      title: UserResponse
    FeedbackForm_data:
      anyOf:
      - $ref: '#/components/schemas/RatingData'
      - {}
    Meta:
      anyOf:
      - {}
      - {}
      title: Meta
    FeedbackForm_snapshot:
      anyOf:
      - $ref: '#/components/schemas/SnapshotData'
      - {}
    Name:
      anyOf:
      - {}
      - {}
      title: Name
    Content_Type:
      anyOf:
      - {}
      - {}
      title: Content Type
    Size:
      anyOf:
      - {}
      - {}
      title: Size
    Hash:
      anyOf:
      - {}
      - {}
      title: Hash
    Data:
      anyOf:
      - {}
      - {}
      title: Data
    KnowledgeResponse_files_inner:
      anyOf:
      - $ref: '#/components/schemas/FileMetadataResponse'
      - type: object
    Profile_Image_Url:
      anyOf:
      - {}
      - {}
      default: /static/favicon.png
      title: Profile Image Url
    Description:
      anyOf:
      - {}
      - {}
      title: Description
    Capabilities:
      anyOf:
      - {}
      - {}
      title: Capabilities
    Rating:
      anyOf:
      - {}
      - {}
      - {}
      title: Rating
    Model_Id:
      anyOf:
      - {}
      - {}
      title: Model Id
    Sibling_Model_Ids:
      anyOf:
      - items: {}
      - {}
      title: Sibling Model Ids
    Reason:
      anyOf:
      - {}
      - {}
      title: Reason
    Comment:
      anyOf:
      - {}
      - {}
      title: Comment
    Chat:
      anyOf:
      - {}
      - {}
      title: Chat
    Ui:
      anyOf:
      - {}
      - {}
      default: {}
      title: Ui
    ValidationError_loc_inner:
      anyOf:
      - type: string
      - type: integer
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http
